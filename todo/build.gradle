plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	runtimeOnly 'org.postgresql:postgresql:42.7.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	doFirst {
		def envFile = rootProject.file('.env')
		if (envFile.exists()) {
			envFile.eachLine { line ->
				if (line && line.contains('=')) {
					def (key, value) = line.split('=', 2)
					environment key.trim(), value.trim()
				}
			}
		}
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

bootJar {
	archiveFileName = 'todo.jar'
}

